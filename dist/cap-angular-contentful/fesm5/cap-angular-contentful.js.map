{"version":3,"file":"cap-angular-contentful.js","sources":["ng://cap-angular-contentful/lib/services/config.service.ts","ng://cap-angular-contentful/lib/services/contentful.service.ts","ng://cap-angular-contentful/lib/contentful.module.ts","ng://cap-angular-contentful/public-api.ts","ng://cap-angular-contentful/cap-angular-contentful.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\r\nimport { IConfig } from '../interfaces/config.interface';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  accessToken: string;\r\n  space: string;\r\n  environment: string;\r\n\r\n  constructor(@Optional() config: IConfig) {\r\n    if (config) {\r\n      this.accessToken = config.accessToken;\r\n      this.space = config.space;\r\n      this.environment = config.environment;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, pipe, throwError } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CapContentfulService {\r\n\r\n    private actionUrl: string;\r\n    private httpOptions: any;\r\n\r\n    constructor(\r\n        private _http: HttpClient, \r\n        private configService: ConfigService\r\n    ) {\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({ \r\n                'Authorization': `Bearer ${this.configService.accessToken}`,\r\n                'Content-Type': 'application/vnd.contentful.delivery.v1+json'\r\n            }),\r\n            observe: \"response\"\r\n        };\r\n        this.actionUrl = `https://cdn.contentful.com/spaces/${this.configService.space}/environments/${this.configService.environment}/`;\r\n    }\r\n\r\n    responseWithRelatedAssets(response: any, relatedAssetKey: string[]): any {\r\n        if (!response.includes || \r\n            !response.includes.Asset ||\r\n            !response.items) {\r\n            return response;\r\n        }\r\n        const includes = response.includes.Asset;\r\n        const items = response.items;\r\n\r\n        // By each item must be know his related Asset\r\n        let newItems = [];\r\n        items.map(item => {\r\n            relatedAssetKey.map(key => {\r\n                // Search and replace by a include file\r\n                let file = includes.filter(a => a.sys.id === item.fields[key].sys.id)[0].fields;\r\n                const fileClone = file;\r\n                file = file.file;            \r\n                file['title'] = fileClone.title || '';\r\n                file['description'] = fileClone.description || '';\r\n                item.fields[key] =  {...item.fields[key], file};\r\n                newItems = [...newItems, item];\r\n            });\r\n        });\r\n        response.items = newItems;\r\n        return response.items;\r\n    }\r\n\r\n    getItems(contentType: string, relatedAssetKey?: string[]): Observable<any> {\r\n        const _url = `${this.actionUrl}entries?content_type=${contentType}`;\r\n        return this._http.get<any>(_url, this.httpOptions)\r\n        .pipe(\r\n            map((response: any) => response.body),\r\n            tap((response: any) => {\r\n                if (relatedAssetKey) {\r\n                    return this.responseWithRelatedAssets(response, relatedAssetKey);\r\n                } else {\r\n                    return response;\r\n                }\r\n            }),\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    getItemById(contentType: string, id: string, relatedAssetKey?: string[]): Observable<any> {\r\n        const _url = `${this.actionUrl}entries?content_type=${contentType}&fields.id=${id}`;\r\n        return this._http.get<any>(_url, this.httpOptions)\r\n        .pipe(\r\n            map((response: any) => response.body),\r\n            tap((response: any) => {\r\n                if (relatedAssetKey) {\r\n                    return this.responseWithRelatedAssets(response, relatedAssetKey);\r\n                } else {\r\n                    return response;\r\n                }\r\n            }),\r\n            catchError(error => this.handleError(error))\r\n        );\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        return throwError(error || 'Server error');\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ConfigService } from './services/config.service';\r\nimport { IConfig } from './interfaces/config.interface';\r\nimport { CapContentfulService } from './services/contentful.service';\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [\r\n    CapContentfulService\r\n  ],\r\n  schemas: [\r\n  ]\r\n})\r\nexport class CapContentfulModule {\r\n  static forRoot(config: IConfig): ModuleWithProviders<CapContentfulModule> {\r\n    return {\r\n      ngModule: CapContentfulModule,\r\n      providers: [\r\n        {\r\n          provide: ConfigService,\r\n          useValue: config\r\n        },\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n","/*\r\n * Public API Surface of cap-contentful\r\n */\r\nexport * from './lib/contentful.module';\r\nexport * from './lib/services/contentful.service';\r\nexport * from './lib/services/config.service';\r\nexport * from './lib/interfaces/config.interface';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["tslib_1.__param"],"mappings":"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"}